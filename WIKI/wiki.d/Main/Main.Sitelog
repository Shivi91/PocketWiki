version=pmwiki-2.2.18 ordered=1 urlencoded=1
agent=Opera/9.80 (Windows NT 6.1; U; en) Presto/2.8.131 Version/11.10
author=admin
charset=UTF-8
csum=
ctime=1287990614
host=81.217.70.206
name=Main.Sitelog
passwdread=@admins
rev=14
targets=Profiles.Admin
text== Site change log =%0a%0aList of changes I've done at source code level (core and some recipes). Not public.%0a%0a==[[~admin]] October 29, 2010, at 12:20 AM==%0a%0a====Installed [[http://www.pmwiki.org/wiki/Cookbook/BreakPageList|recipe to break pagelists into several pages with navigation links]].====%0a%0a(:include Template/Formatting#note#endnote Text="Works only when the page that contains the page list is not cacheable by the HTMLCache - one way to force it 'non-cacheable is to add something like :if auth read:":)\\%0aAlso, I commented out the :bplinit: markup in '''breakpagelist.php''' because I use the global initialisation in '''config.php'''.%0a%0a(:codestart php:)%0a## Markup (:bplinit args.... :)%0a#Markup('bplinit','directives','/\\(:bplinit\\s*(.*?)\\s*:\\)/e',%0a#%0a(:codeend:)\\%0a%0a==[[~admin]] October 27, 2010, at 07:19 AM==%0a%0a====Modified pmwiki.php - using :title markup no longer stops caching. It seems to be safe.====%0a%0a'''Around line 727'''%0a%0a(:codestart php:)%0afunction SetProperty($pagename, $prop, $value, $sep=NULL, $keep=NULL) {%0a  global $PCache, $KeepToken; // lets just test, lets just test, lets just test, lets just test, lets just test, lets just test, lets just test, lets just test, %0a  if(strcmp($prop, 'title') != 0)     // %3c%3c%3c this one, (:title:) no longer stops caching%0a      NoCache();%0a  $prop = "=p_$prop";%0a  $value = preg_replace("/$KeepToken(\\d.*?)$KeepToken/e",%0a                        "\$GLOBALS['KPV']['$1']", $value);%0a  if (!is_null($sep) && isset($PCache[$pagename][$prop]))%0a    $value = $PCache[$pagename][$prop] . $sep . $value;%0a  if (is_null($keep) || !isset($PCache[$pagename][$prop]))%0a    $PCache[$pagename][$prop] = $value;%0a  return $PCache[$pagename][$prop];%0a}%0a(:codeend:)%0a----%0a====The [[http://www.pmwiki.org/wiki/Cookbook/MarkupExtensions|extendmarkup]] recipe is a little performance killer, especially some of the provided markups eat too much CPU. Fortunately, it is possible to disable them selectively.====%0a%0a'''In config.php'''%0a(:codestart php:)%0aSDV($MarkupExtensionsFmt, array("`f aquo '/ '@ '; [^ q&a A; {|} {= :: para"));%0a(:codeend:)%0a----%0a====Added page generation timer====%0a%0a'''In config.php'''%0a(:codestart php:)%0a## Page generation timer recipe%0a$GenerationBegin = explode(' ', microtime());%0a$GenerationBegin = $GenerationBegin[0] + $GenerationBegin[1];%0afunction GenerationTime(){%0a        global $GenerationBegin;%0a        $GenerationEnd = explode(' ', microtime());%0a        $GenerationEnd = $GenerationEnd[0] + $GenerationEnd[1];%0a        $GenerationTotal = $GenerationEnd - $GenerationBegin;%0a        $GenerationTotal = round($GenerationTotal, 3);%0a        print "$GenerationTotal";%0a}%0a(:codeend:)%0a%0a'''And in the skin template:'''%0a(:codestart php:)%0a%3c!--/PageFootFmt-->    %3c%3c after this line%0a%3cdiv style="float:right;">%3csmall>Page generated in %3c!--function:GenerationTime--> seconds.%3c/small>%3c/div>%0a(:codeend:)%0a\\%0a%0a==[[~admin]] October 25, 2010, at 08:42 AM==%0a%0a====Modified nginx.conf to deny direct access to ./cache.d directory. Does not need to be accessible by the web server.====%0a%0a====modified '''extendmarkup.php''' (line 564)====%0a(:codestart php:)%0a  // $DefaultPageTextFmt = 'Describe [[$Group/$Title]] here.';%0a         // XXX alex breaks Site.PageNotFound%0a         // (commented out)%0a(:codeend:)%0a%0a%0a
time=1305414733
author:1305414733=admin
diff:1305414733:1288306068:=26c26%0a%3c   global $PCache, $KeepToken; // lets just test, lets just test, lets just test, lets just test, lets just test, lets just test, lets just test, lets just test, %0a---%0a>   global $PCache, $KeepToken;%0a
host:1305414733=81.217.70.206
author:1288306068=admin
diff:1288306068:1288304446:=7,17c7,10%0a%3c ====Installed [[http://www.pmwiki.org/wiki/Cookbook/BreakPageList|recipe to break pagelists into several pages with navigation links]].====%0a%3c %0a%3c (:include Template/Formatting#note#endnote Text="Works only when the page that contains the page list is not cacheable by the HTMLCache - one way to force it 'non-cacheable is to add something like :if auth read:":)\\%0a%3c Also, I commented out the :bplinit: markup in '''breakpagelist.php''' because I use the global initialisation in '''config.php'''.%0a%3c %0a%3c (:codestart php:)%0a%3c ## Markup (:bplinit args.... :)%0a%3c #Markup('bplinit','directives','/\\(:bplinit\\s*(.*?)\\s*:\\)/e',%0a%3c #%0a%3c (:codeend:)\\%0a%3c %0a---%0a> Installed [[http://www.pmwiki.org/wiki/Cookbook/BreakPageList|recipe to break pagelists into several pages with navigation links]].%0a> %0a> (:include Template/Formatting#note#endnote Text="Works only when the page that contains the page list is not cacheable by the HTMLCache - one way to force it 'non-cacheable is to add something like :if auth read:":)\\\%0a>  %0a
host:1288306068=81.217.70.206
author:1288304446=admin
diff:1288304446:1288157641:=5,10d4%0a%3c ==[[~admin]] October 29, 2010, at 12:20 AM==%0a%3c %0a%3c Installed [[http://www.pmwiki.org/wiki/Cookbook/BreakPageList|recipe to break pagelists into several pages with navigation links]].%0a%3c %0a%3c (:include Template/Formatting#note#endnote Text="Works only when the page that contains the page list is not cacheable by the HTMLCache - one way to force it 'non-cacheable is to add something like :if auth read:":)\\\%0a%3c  %0a
host:1288304446=81.217.70.206
author:1288157641=admin
diff:1288157641:1288157174:=7,8c7,8%0a%3c ====Modified pmwiki.php - using :title markup no longer stops caching. It seems to be safe.====%0a%3c %0a---%0a> * Modified pmwiki.php - using :title markup no longer stops caching. It seems to be safe.%0a> %0a27,28c27,28%0a%3c ====The [[http://www.pmwiki.org/wiki/Cookbook/MarkupExtensions|extendmarkup]] recipe is a little performance killer, especially some of the provided markups eat too much CPU. Fortunately, it is possible to disable them selectively.====%0a%3c %0a---%0a> * The [[http://www.pmwiki.org/wiki/Cookbook/MarkupExtensions|extendmarkup]] recipe is a little performance killer, especially some of the provided markups eat too much CPU. Fortunately, it is possible to disable them selectively.%0a> %0a33,55d32%0a%3c ----%0a%3c ====Added page generation timer====%0a%3c %0a%3c '''In config.php'''%0a%3c (:codestart php:)%0a%3c ## Page generation timer recipe%0a%3c $GenerationBegin = explode(' ', microtime());%0a%3c $GenerationBegin = $GenerationBegin[0] + $GenerationBegin[1];%0a%3c function GenerationTime(){%0a%3c         global $GenerationBegin;%0a%3c         $GenerationEnd = explode(' ', microtime());%0a%3c         $GenerationEnd = $GenerationEnd[0] + $GenerationEnd[1];%0a%3c         $GenerationTotal = $GenerationEnd - $GenerationBegin;%0a%3c         $GenerationTotal = round($GenerationTotal, 3);%0a%3c         print "$GenerationTotal";%0a%3c }%0a%3c (:codeend:)%0a%3c %0a%3c '''And in the skin template:'''%0a%3c (:codestart php:)%0a%3c %3c!--/PageFootFmt-->    %3c%3c after this line%0a%3c %3cdiv style="float:right;">%3csmall>Page generated in %3c!--function:GenerationTime--> seconds.%3c/small>%3c/div>%0a%3c (:codeend:)%0a60,62c37,38%0a%3c ====Modified nginx.conf to deny direct access to ./cache.d directory. Does not need to be accessible by the web server.====%0a%3c %0a%3c ====modified '''extendmarkup.php''' (line 564)====%0a---%0a> * Modified nginx.conf to deny direct access to ./cache.d directory. Does not need to be accessible by the web server.%0a> * modified '''extendmarkup.php''' (line 564)%0a
host:1288157641=81.217.70.206
author:1288157174=admin
diff:1288157174:1288156846:=25,31d24%0a%3c (:codeend:)%0a%3c ----%0a%3c * The [[http://www.pmwiki.org/wiki/Cookbook/MarkupExtensions|extendmarkup]] recipe is a little performance killer, especially some of the provided markups eat too much CPU. Fortunately, it is possible to disable them selectively.%0a%3c %0a%3c '''In config.php'''%0a%3c (:codestart php:)%0a%3c SDV($MarkupExtensionsFmt, array("`f aquo '/ '@ '; [^ q&a A; {|} {= :: para"));%0a
host:1288157174=81.217.70.206
author:1288156846=admin
diff:1288156846:1288156760:=3,4d2%0a%3c List of changes I've done at source code level (core and some recipes). Not public.%0a%3c %0a33c31%0a%3c   // $DefaultPageTextFmt = 'Describe [[$Group/$Title]] here.';%0a---%0a>   $DefaultPageTextFmt = 'Describe [[$Group/$Title]] here.';%0a
host:1288156846=81.217.70.206
author:1288156760=admin
diff:1288156760:1288156559:=2,24d1%0a%3c %0a%3c ==[[~admin]] October 27, 2010, at 07:19 AM==%0a%3c %0a%3c * Modified pmwiki.php - using :title markup no longer stops caching. It seems to be safe.%0a%3c %0a%3c '''Around line 727'''%0a%3c %0a%3c (:codestart php:)%0a%3c function SetProperty($pagename, $prop, $value, $sep=NULL, $keep=NULL) {%0a%3c   global $PCache, $KeepToken;%0a%3c   if(strcmp($prop, 'title') != 0)     // %3c%3c%3c this one, (:title:) no longer stops caching%0a%3c       NoCache();%0a%3c   $prop = "=p_$prop";%0a%3c   $value = preg_replace("/$KeepToken(\\d.*?)$KeepToken/e",%0a%3c                         "\$GLOBALS['KPV']['$1']", $value);%0a%3c   if (!is_null($sep) && isset($PCache[$pagename][$prop]))%0a%3c     $value = $PCache[$pagename][$prop] . $sep . $value;%0a%3c   if (is_null($keep) || !isset($PCache[$pagename][$prop]))%0a%3c     $PCache[$pagename][$prop] = $value;%0a%3c   return $PCache[$pagename][$prop];%0a%3c }%0a%3c (:codeend:)%0a%3c \\%0a
host:1288156760=81.217.70.206
author:1288156559=admin
diff:1288156559:1288037080:=7c7%0a%3c (:codestart php:)%0a---%0a> (:source lang=php linenum=1 :)%0a11c11%0a%3c (:codeend:)%0a---%0a> (:sourceend:)%0a
host:1288156559=81.217.70.206
author:1288037080=admin
diff:1288037080:1288036945:=1,12c1,42%0a%3c = Site change log =%0a%3c %0a%3c ==[[~admin]] October 25, 2010, at 08:42 AM==%0a%3c %0a%3c * Modified nginx.conf to deny direct access to ./cache.d directory. Does not need to be accessible by the web server.%0a%3c * modified '''extendmarkup.php''' (line 564)%0a%3c (:source lang=php linenum=1 :)%0a%3c   $DefaultPageTextFmt = 'Describe [[$Group/$Title]] here.';%0a%3c          // XXX alex breaks Site.PageNotFound%0a%3c          // (commented out)%0a%3c (:sourceend:)%0a%3c %0a---%0a> = Source Code information =%0a> This page lists where to get source code for my various plugins. Generally, source code is only available via anonymous SVN. I do not offer zipped archives, simply because code is only interesting for developers and such users are usually familiar with using a version control system.%0a> %0a> ==TabSRMM and Clist Nicer==%0a> %0a> Both plugins are hosted inside the main SVN repository for Miranda. When you checkout Miranda from [[http://code.google.com/p/miranda/source/checkout|Googlecode]], you'll also get the code for these plugins. %0a> %0a> :'''The URI for the TRUNK Miranda repository is:'''%0a> %0a> * svn checkout http://miranda.googlecode.com/svn/trunk/ miranda-read-only%0a> %0a> This will check out '''trunk''' code which means you'll get the bleeding edge, code which is under heavy development. You should not use this when your goal is to compile a stable Miranda version.%0a> %0a> :'''The URI for stable code is:'''%0a> %0a> * svn checkout http://miranda.googlecode.com/svn/branches/stable/ miranda-read-only%0a> %0a> ===Where to put the code?===%0a> %0a> All my plugins have been set up in a way that their code must be in a folder just one level below the '''/plugins''' subfolder in the Miranda source code tree. For example:%0a> %0a> [@%0a> C:\code\Miranda\plugins\tabSRMM%0a> C:\code\Miranda\plugins\clist_nicer%0a> @]%0a> %0a> ==Supported build environments==%0a> %0a> * Visual C++ 6.0 (also known as Visual Studio 98) (UNICODE builds, x86 32bit only)%0a> * Visual Studio 2008 and 2010 (all platforms, UNICODE builds, 32- and 64bit)\\\%0a> %0a> are the only officially supported build environments for all my plugins. Project files are available for 6.0 ('''.dsw / .dsp''') and 10.0 ('''.sln / .vcproj'''). Other versions should work when you convert the .dsw/.dsp project files.%0a> %0a> ==SVN clients==%0a> %0a> Using and understanding SVN can be hard for a new user, but there are some very nice graphical clients for Windows. I recommend [[http://tortoisesvn.tigris.org|TortoiseSVN]] - a SVN frontend for Microsoft Windows - or [[http://rapidsvn.tigris.org|RapidSVN]] - a multiplatform GUI frontend for SVN which are both very feature-rich and easy to use.%0a> %0a> Users of Microsoft Visual Studio (2005 or later) should also consider [[http://ankhsvn.open.collab.net/|Ankh SVN]] (Open Source) or [[http://www.visualsvn.com/|Visual SVN]] which is a commercial product but free license keys for open source developers are available.%0a> %0a> ==License and copyrights==%0a> %0a> The source code for all my plugins is licensed under the [[GPL|Gnu General Public License Version 2]] or any later version.%0a
host:1288037080=81.217.70.206
author:1288036945=admin
diff:1288036945:1288036838:=1,43c1,4%0a%3c = Source Code information =%0a%3c This page lists where to get source code for my various plugins. Generally, source code is only available via anonymous SVN. I do not offer zipped archives, simply because code is only interesting for developers and such users are usually familiar with using a version control system.%0a%3c %0a%3c ==TabSRMM and Clist Nicer==%0a%3c %0a%3c Both plugins are hosted inside the main SVN repository for Miranda. When you checkout Miranda from [[http://code.google.com/p/miranda/source/checkout|Googlecode]], you'll also get the code for these plugins. %0a%3c %0a%3c :'''The URI for the TRUNK Miranda repository is:'''%0a%3c %0a%3c * svn checkout http://miranda.googlecode.com/svn/trunk/ miranda-read-only%0a%3c %0a%3c This will check out '''trunk''' code which means you'll get the bleeding edge, code which is under heavy development. You should not use this when your goal is to compile a stable Miranda version.%0a%3c %0a%3c :'''The URI for stable code is:'''%0a%3c %0a%3c * svn checkout http://miranda.googlecode.com/svn/branches/stable/ miranda-read-only%0a%3c %0a%3c ===Where to put the code?===%0a%3c %0a%3c All my plugins have been set up in a way that their code must be in a folder just one level below the '''/plugins''' subfolder in the Miranda source code tree. For example:%0a%3c %0a%3c [@%0a%3c C:\code\Miranda\plugins\tabSRMM%0a%3c C:\code\Miranda\plugins\clist_nicer%0a%3c @]%0a%3c %0a%3c ==Supported build environments==%0a%3c %0a%3c * Visual C++ 6.0 (also known as Visual Studio 98) (UNICODE builds, x86 32bit only)%0a%3c * Visual Studio 2008 and 2010 (all platforms, UNICODE builds, 32- and 64bit)\\\%0a%3c %0a%3c are the only officially supported build environments for all my plugins. Project files are available for 6.0 ('''.dsw / .dsp''') and 10.0 ('''.sln / .vcproj'''). Other versions should work when you convert the .dsw/.dsp project files.%0a%3c %0a%3c ==SVN clients==%0a%3c %0a%3c Using and understanding SVN can be hard for a new user, but there are some very nice graphical clients for Windows. I recommend [[http://tortoisesvn.tigris.org|TortoiseSVN]] - a SVN frontend for Microsoft Windows - or [[http://rapidsvn.tigris.org|RapidSVN]] - a multiplatform GUI frontend for SVN which are both very feature-rich and easy to use.%0a%3c %0a%3c Users of Microsoft Visual Studio (2005 or later) should also consider [[http://ankhsvn.open.collab.net/|Ankh SVN]] (Open Source) or [[http://www.visualsvn.com/|Visual SVN]] which is a commercial product but free license keys for open source developers are available.%0a%3c %0a%3c ==License and copyrights==%0a%3c %0a%3c The source code for all my plugins is licensed under the [[GPL|Gnu General Public License Version 2]] or any later version.%0a%3c %0a---%0a> =Change log for the site software=%0a> %0a> * Modified nginx.conf to deny direct access to ./cache.d directory. Does not need to be accessible by the web server.%0a> * modified '''extendmarkup.php''' (line 564)%0a
host:1288036945=81.217.70.206
author:1288036838=admin
diff:1288036838:1288036815:=4a5,9%0a> (:source lang=php linenum=1 :)%0a>   $DefaultPageTextFmt = 'Describe [[$Group/$Title]] here.';%0a>          // XXX alex breaks Site.PageNotFound%0a>          // (commented out)%0a> (:sourceend:)%0a
host:1288036838=81.217.70.206
author:1288036815=admin
diff:1288036815:1287990697:=1a2,4%0a> %0a> %0a> ==[[~admin]] October 25, 2010, at 08:42 AM==%0a
host:1288036815=81.217.70.206
author:1287990614=admin
diff:1287990614:1287990614:=1,12d0%0a%3c =Change log for the site software=%0a%3c %0a%3c %0a%3c ==[[~admin]] October 25, 2010, at 08:42 AM==%0a%3c %0a%3c * Modified nginx.conf to deny direct access to ./cache.d directory. Does not need to be accessible by the web server.%0a%3c * modified '''extendmarkup.php''' (line 564)%0a%3c (:source lang=php linenum=1 :)%0a%3c   $DefaultPageTextFmt = 'Describe [[$Group/$Title]] here.';%0a%3c          // XXX alex breaks Site.PageNotFound%0a%3c          // (commented out)%0a%3c (:sourceend:)%0a
host:1287990614=81.217.70.206
