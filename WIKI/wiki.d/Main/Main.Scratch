version=pmwiki-2.2.18 ordered=1 urlencoded=1
agent=Mozilla/5.0 (Windows NT 6.1; WOW64; rv:2.0b8pre) Gecko/20101102 Firefox/4.0b8pre Firefox/4.0b8pre
author=admin
charset=UTF-8
csum=
ctime=1287987662
host=81.217.70.206
name=Main.Scratch
passwdread=@admins
rev=9
targets=
text==Scratchpad=%0a%0aIn the old days of the Web, maintaining web pages and content was a very cumbersome and sometimes annoying job. The tools and technologies were primitive compared to what we have today. A webmaster typically had to edit HTML text, in most cases with a simple text editor and CSS did not exist, so all formatting rules had to be part of the HTML code in form of attributes.\\\%0a%0aMaintaining a large site with many pages and other content (mostly images at this time, because videos were virtually non-existent because of the bandwidth limitations) was hard and prone to errors, because all links had to be checked carefully.%0a%0a== The next step, visual HTML editors ===%0a%0aThis started around the mid 90's. Visual HTML editors were a new generation of software that allowed a web designer to write HTML pages with a WYSIWYG interface - pretty much like you use a word processor to write a document. It made things easier and harder at the same time. Easier, because they enabled you to write a HTML page without actually knowing HTML in detail (some basic knowledge was still required) and harder, because most of these programs were buggy and often generated wrong or ugly HTML code. Some well-known examples of this generation of programs:%0a* [[http://en.wikipedia.org/wiki/Adobe_Dreamweaver|Macromedia Dreamweaver]] 1997-now, (today Adobe Dreamweaver, still the same product).%0a* [[http://en.wikipedia.org/wiki/Microsoft_FrontPage|Microsoft Frontpage]] 1995-2003 - discontinued, some parts made it into Visual Studio.%0a* [[http://en.wikipedia.org/wiki/Netscape_Composer|Netscape composer]] - part of the Netscape suite 1997-2004 - now discontinued, superseded by Mozilla composer (NVU).\\\%0a%0aAll these programs made web page authoring available to more people, because they simplified it and the result were many, many new private home pages with a "canned" look (canned because new users tended to use pre-made templates for their page(s)). Professional web designers got the benefit of higher productivity and easier project management - most of these editors had integrated project management so that you would usually keep a copy of the entire site on your local PC for editing and the software would automatically synchronize it with the remote project on the web server. %0a%0a== The dynamic web ==%0a%0aOne major drawback of the old web was that it was a very static thing. Once edited and uploaded to the server, a web page didn't change until the webmaster again uploaded a modified version. The content of these pages was static and there were few if any ways to interact with a web page of the 90's - most interaction went by simple forms which were usually submitted via e-mail to the webmaster.\\\%0a%0aMore advanced sites were [[http://en.wikipedia.org/wiki/Cgi_script|using CGI scripts]] which was most likely the first ever method to generate web pages "on the fly". A CGI script was basically a program running on the web server, generating HTML output, thus it was able to serve dynamically generated pages. Something what is the standard today was the rare exception back these days.\\\%0aThe first known internet forum systems that appeared around 1995 (then called bulletin boards) were implemented as a set of CGI scripts and were feature-wise not even remotely comparable to what we see today on almost any website.%0a%0a== The PHP revolution ==%0a%0aYou know when something has the potential to change things forever and [[http://en.wikipedia.org/wiki/Php|PHP]] was such a thing - we knew it when we first learned about it, because the idea was so cool and instantly opened up new perspectives for future web design. PHP started as a small set of CGI scripts for managing small personal home pages and quickly grew into a immensely powerful tool for web designers. This was around 1997/1998 and ever since then PHP established itself as a de-facto standard for the development of web applications.%0a%0a== Applications? ==%0a%0aYes, correct. Web sites were no longer limited to static pages and a few scripts. With PHP they were able to behave like applications, hence the term web applications. They can interact with the user, accept input via forms and generate output dynamically, depending on the user's action. Because PHP is a full featured programming language, the possibilities are vast and the limitations few in number. 
time=1288760262
author:1288760262=admin
diff:1288760262:1288156533:=3,29c3,15%0a%3c In the old days of the Web, maintaining web pages and content was a very cumbersome and sometimes annoying job. The tools and technologies were primitive compared to what we have today. A webmaster typically had to edit HTML text, in most cases with a simple text editor and CSS did not exist, so all formatting rules had to be part of the HTML code in form of attributes.\\\%0a%3c %0a%3c Maintaining a large site with many pages and other content (mostly images at this time, because videos were virtually non-existent because of the bandwidth limitations) was hard and prone to errors, because all links had to be checked carefully.%0a%3c %0a%3c == The next step, visual HTML editors ===%0a%3c %0a%3c This started around the mid 90's. Visual HTML editors were a new generation of software that allowed a web designer to write HTML pages with a WYSIWYG interface - pretty much like you use a word processor to write a document. It made things easier and harder at the same time. Easier, because they enabled you to write a HTML page without actually knowing HTML in detail (some basic knowledge was still required) and harder, because most of these programs were buggy and often generated wrong or ugly HTML code. Some well-known examples of this generation of programs:%0a%3c * [[http://en.wikipedia.org/wiki/Adobe_Dreamweaver|Macromedia Dreamweaver]] 1997-now, (today Adobe Dreamweaver, still the same product).%0a%3c * [[http://en.wikipedia.org/wiki/Microsoft_FrontPage|Microsoft Frontpage]] 1995-2003 - discontinued, some parts made it into Visual Studio.%0a%3c * [[http://en.wikipedia.org/wiki/Netscape_Composer|Netscape composer]] - part of the Netscape suite 1997-2004 - now discontinued, superseded by Mozilla composer (NVU).\\\%0a%3c %0a%3c All these programs made web page authoring available to more people, because they simplified it and the result were many, many new private home pages with a "canned" look (canned because new users tended to use pre-made templates for their page(s)). Professional web designers got the benefit of higher productivity and easier project management - most of these editors had integrated project management so that you would usually keep a copy of the entire site on your local PC for editing and the software would automatically synchronize it with the remote project on the web server. %0a%3c %0a%3c == The dynamic web ==%0a%3c %0a%3c One major drawback of the old web was that it was a very static thing. Once edited and uploaded to the server, a web page didn't change until the webmaster again uploaded a modified version. The content of these pages was static and there were few if any ways to interact with a web page of the 90's - most interaction went by simple forms which were usually submitted via e-mail to the webmaster.\\\%0a%3c %0a%3c More advanced sites were [[http://en.wikipedia.org/wiki/Cgi_script|using CGI scripts]] which was most likely the first ever method to generate web pages "on the fly". A CGI script was basically a program running on the web server, generating HTML output, thus it was able to serve dynamically generated pages. Something what is the standard today was the rare exception back these days.\\\%0a%3c The first known internet forum systems that appeared around 1995 (then called bulletin boards) were implemented as a set of CGI scripts and were feature-wise not even remotely comparable to what we see today on almost any website.%0a%3c %0a%3c == The PHP revolution ==%0a%3c %0a%3c You know when something has the potential to change things forever and [[http://en.wikipedia.org/wiki/Php|PHP]] was such a thing - we knew it when we first learned about it, because the idea was so cool and instantly opened up new perspectives for future web design. PHP started as a small set of CGI scripts for managing small personal home pages and quickly grew into a immensely powerful tool for web designers. This was around 1997/1998 and ever since then PHP established itself as a de-facto standard for the development of web applications.%0a%3c %0a%3c == Applications? ==%0a%3c %0a%3c Yes, correct. Web sites were no longer limited to static pages and a few scripts. With PHP they were able to behave like applications, hence the term web applications. They can interact with the user, accept input via forms and generate output dynamically, depending on the user's action. Because PHP is a full featured programming language, the possibilities are vast and the limitations few in number. %0a\ No newline at end of file%0a---%0a> All kind of stuff...\\\%0a> %0a> ==[[~admin]] October 25, 2010, at 08:42 AM==%0a> %0a> * Modified nginx.conf to deny direct access to ./cache.d directory. Does not need to be accessible by the web server.%0a> * modified '''extendmarkup.php''' (line 564)%0a> (:codestart php:)%0a>   $DefaultPageTextFmt = 'Describe [[$Group/$Title]] here.';%0a>          // XXX alex breaks Site.PageNotFound%0a>          // (commented out)%0a> (:codeend:)%0a> %0a> %0a
host:1288760262=81.217.70.206
author:1288156533=admin
diff:1288156533:1288037226:=9c9%0a%3c (:codestart php:)%0a---%0a> (:source lang=php linenum=1 :)%0a13c13%0a%3c (:codeend:)%0a---%0a> (:sourceend:)%0a
host:1288156533=81.217.70.206
author:1288037226=admin
diff:1288037226:1287988971:=
host:1288037226=81.217.70.206
author:1287988971=admin
diff:1287988971:1287988949:=1,3c1%0a%3c =Scratchpad=%0a%3c %0a%3c All kind of stuff...\\\%0a---%0a> Scratch%0a
host:1287988971=81.217.70.206
author:1287988949=admin
diff:1287988949:1287988475:=3,13c3,4%0a%3c ==[[~admin]] October 25, 2010, at 08:42 AM==%0a%3c %0a%3c * Modified nginx.conf to deny direct access to ./cache.d directory. Does not need to be accessible by the web server.%0a%3c * modified '''extendmarkup.php''' (line 564)%0a%3c (:source lang=php linenum=1 :)%0a%3c   $DefaultPageTextFmt = 'Describe [[$Group/$Title]] here.';%0a%3c          // XXX alex breaks Site.PageNotFound%0a%3c          // (commented out)%0a%3c (:sourceend:)%0a%3c %0a%3c %0a---%0a> [[~admin]] October 25, 2010, at 08:34 AM%0a> Test und so%0a\ No newline at end of file%0a
host:1287988949=81.217.70.206
author:1287988475=admin
diff:1287988475:1287987935:=3d2%0a%3c [[~admin]] October 25, 2010, at 08:34 AM%0a
host:1287988475=81.217.70.206
author:1287987935=admin
diff:1287987935:1287987686:=1,3c1%0a%3c Scratch%0a%3c %0a%3c Test und so%0a\ No newline at end of file%0a---%0a> Scratch%0a\ No newline at end of file%0a
host:1287987935=81.217.70.206
author:1287987662=admin
diff:1287987662:1287987662:=1d0%0a%3c Scratch%0a\ No newline at end of file%0a
host:1287987662=81.217.70.206
