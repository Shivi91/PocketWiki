version=pmwiki-2.2.18 ordered=1 urlencoded=1
agent=Opera/9.80 (Windows NT 6.1; U; en) Presto/2.8.131 Version/11.10
author=admin
charset=UTF-8
csum=
ctime=1287694134
host=81.217.70.206
name=TabSRMM.Containers
rev=13
targets=TabSRMM.TabSRMM,TabSRMM.ConfigureContainers,TabSRMM.GroupChats,TabSRMM.EventNotifications,TabSRMM.Sessions
text=(:title Containers in TabSRMM:)%0a%3c|[[TabSRMM#reference|Page Index]]|>%0a=Containers=%0a[[#teaser]]%0a->'''Quick link if you only want to learn about the configuration options, go [[ConfigureContainers|here]]'''.\\\%0a%0aIn TabSRMM terminology, message windows are often called '''containers'''. So whenever you see this term, it basically means a top level message window. It is called a container, because it acts as a top level parent window for the actual session windows. The container implements a tabbed user interface and can hold any number of children and each child can be either a standard IM window (for 1:1 instant messaging chats) or a [[Group_chats|group chat]] window.\\\%0a%0aTabSRMM also supports multiple containers. You can have as many as you want and there are 3 different modes for assigning a chat session to a particular container. A special case is the '''single window mode''' which disables the tabbed user interface. When active, each chat session will get its own top level window and any container window will hold exactly one child.%0a[[#teaserend]]%0a%0a==Configuration==%0a%0aMany options in TabSRMM are implemented on a '''per container''' basis, which means that different container windows can act or look different from each other. This is useful when you want to group and organize your chat sessions in one or another way. It is, however, completely optional and by default, all containers share a common set of settings to simplify configuration.%0a%0a== Identifying containers==%0a%0aAny container is identified by its name, which must be unique. How container names are assigned depends on the way container windows are used in the plugin:%0a%0a* The default container. It always exists and its name is always "Default". You cannot rename or delete the default container. Any non-assigned chat session will be opened in the default container%0a* '''Container names correspond to contact list group names'''. This happens when you use the option to organize chat sessions with the help of your contact list groups. Whenever you open a chat window, it will open inside a container that inherits its name from the contact list group. If a contact is not in any contact list group, it will open in the **Default** container.\\Note that the contact list's setting of showing groups is not considered here. A contact will still be in its group despite the contact list using a 'flat' layout with no groups.%0a* '''Manually assigned names''' - this is the standard way. You are responsible for creating new (named) containers and assigning contacts to them. In this mode, all new chat sessions will open in the default container until you assign them to another one (which is completely optional, by the way).\\\%0a%0a[[#assigning]]%0a== Assigning and managing containers ==%0a%0aTo create or delete containers, you must have a message window open. The container UI can be reached from the following locations:%0a%0a(:include Template/Formatting#note#endnote Text="The container management UI can only be used when using the manual assignment mode. In any other mode, container management is automatic and the menu entries for assigning or managing containers are unavailable.":)%0a%0a* right click the message window's tool bar and choose %25class=menu%25Attach to container...%25%25%0a* right click any tab to get the same popup menu.\\\%0a%0a(:include Template/Formatting#rimage#endrimage Image="containerui.png" Width="200" rel=highslide Caption="Managing containers":)%0a%0aThe screenshot on the right shows how the container management dialog looks like. It shows a list of containers and a number of buttons to create, rename or delete containers.%0a%0a==== To assign the current contact to a container====%0a%0aSelect the target container in the list and click **Ok**. The current contact's message window will close and re-open in the new container. If the current message tab was the last tab in the open container, it will close, otherwise it will stay open.%0a%0a==== To create a new named container ====%0a%0aEnter the name in the text field at the bottom and click **Create new**.%0a%0a==== To delete a container ====%0a%0aSelect it from the list and click **Delete**%0a%0a====What happens with assigned contacts when their container is deleted?====%0a%0aThe next time, they will open in the default container. Nothing is lost.%0a%0a====Why is it not possible to rearrange message tabs using Drag and Drop?====%0a%0aBecause it's not so easy to implement. Also, I do not consider it a major improvement in usability. Using drag and drop would require you to open the target container before you can drag the tab. If the target container is new, you cannot open it, because a container cannot exist without at least one message tab.%0a%0a==== Quick assignment ====%0a%0aWhen you know that the target container does already exist and just want to move a contact quickly, you can use the %25class=menu%25Attach to >%25%25 menu entry from the popup menu. It will hold a list of available containers to choose from. By using this method, you can skip invoking the container management dialog.%0a%0a==Auto opening message windows==%0a%0aThere are a few methods to configure the way, new message windows are opened when a message is received from some contact. By default, TabSRMM will not automatically open any message windows. The event will flash in the system tray until you click the tray icon or manually open the message window for the contact from whom you received the message. Additionally, you may see a [[EventNotifications|notification popup]].%0a%0aSome people find it more convent to have message windows created automatically when new messages arrive. You can configure this behaviour under %25class=option%25Message Sessions->Tabs and layout[tab]%25%25 with the following settings, all of them in the section "Message tab and window creation options.:%0a%0a# '''ALWAYS popup and activate new message windows''' - when this option is active, TabSRMM will automatically open and activate the message window for any incoming message. This option will 'steal' the focus of the current active desktop window and should therefore be considered the most aggressive option. Also, this option '''has priority''' over the others, so it will always override any other window creation mode. Disable it, if you want to have message windows opened in the background or in minimized state.%0a# '''Automatically create new message sessions windows without activating them''' - when active, new tabs will be created (but not focused) automatically, '''but only when the parent container to which the tab should be added is already open'''. This option will only allow automatic creation of new tabs in already existing containers.%0a# '''New windows are minimized''' - when active, new message windows are created minimized on the task bar (discreet mode, the message window will never steal the focus). '''Option 2) %25red%25MUST%25%25 also be enabled to make this work'''. Basically, if you disable 3) while 2) is enabled, no new windows will be created automatically, but new tabs will be automatically added to existing windows.%0a# '''Pop up a minimized window when a new tab is created''' - if enabled, a minimized message window will be restored to the desktop when a new tab is added to it. Also, when a new container is created on demand, it will put itself to foreground. This option is should be considered %25Red%25aggressive%25%25, because it will steal the input focus.\\\%0a%0a==The different modes of assigning contacts to containers==%0a%0aAs mentioned, you can have multiple containers which may or may not be wanted and can help you with organizing your chat sessions. In a fresh install, only one container is defined and it is called the '''default container'''. Also, there are 4 different methods to tell TabSRMM how it should assign chat sessions to a container. These modes can be chosen under %25class=option%25Message Sessions->Containers[tab]%25%25.%0a%0a===Use contact list group names for organizing container names===%0a%0aThis option will tell tabSRMM to automatically create one container for each contact list group and add chat sessions as tabs. Let's assume you have a contact list group with the name '''Friends''' which holds a few of your more important contacts. Whenever you open a message window for one of the contacts in this group, tabSRMM will open the container with the name "Friends" and add the chat tab to it. If the container is already open, the chat window will be added as a new tab. This mode is fully automatic.%0a%0a(:include Template/Formatting#note#endnote Text="When you move a contact from one contact list group to another one, the message tab will not move to the new container immediately. This will be done the next time you open a chat session for this contact.":)\\\%0a%0a===Maximum number of tabs per container===%0a%0aThis mode, which is also fully automatic, will just limit the number of sessions per container window to the given number. Whenever a new session is created, it is added to the current container, unless this container already has reached the session limit, in which case, a new container will be created.%0a%0a===Use single window mode (one tab per container)===%0a%0aThis mode will effectively disable the tabbed user interface. When active, each message session will be opened in its own top level window.%0a%0aAlso, in this mode, container settings are global for all message windows. Only the size and position of the window will be saved individually for each contact or chat room.%0a%0a===Default container mode (manual assignment)===%0a%0aThis is probably the most flexible method of using multiple containers. In this mode, you have full control over how many different containers you want to use and in which container a given contact should be placed when you open a message session. In a fresh install, only one named container is available. This is called the '''default''' container and it is used for any new message session, unless the contact had been assigned to a different container.%0a%0aSee the section above [[#assigning|about assigning containers in manual mode]]%0a%0a==Related reading==%0a%0a* [[Sessions|session managment]]%0a* [[ConfigureContainers|how to configure the look and feel of a container window]]%0a
time=1305420782
title=Containers in TabSRMM
author:1305420782=admin
diff:1305420782:1289048336:=2c2%0a%3c %3c|[[TabSRMM#reference|Page Index]]|>%0a---%0a> %3c|[[TabSRMM#reference#endreference|Page Index]]|>%0a
host:1305420782=81.217.70.206
author:1289048336=admin
diff:1289048336:1289048073:=24d23%0a%3c [[#assigning]]%0a73,76c72,75%0a%3c ==The different modes of assigning contacts to containers==%0a%3c %0a%3c As mentioned, you can have multiple containers which may or may not be wanted and can help you with organizing your chat sessions. In a fresh install, only one container is defined and it is called the '''default container'''. Also, there are 4 different methods to tell TabSRMM how it should assign chat sessions to a container. These modes can be chosen under %25class=option%25Message Sessions->Containers[tab]%25%25.%0a%3c %0a---%0a> ==How to assign contacts to a container?==%0a> %0a> As mentioned, you can have multiple containers which may or may not be wanted and can help you with organizing your chat sessions. In a fresh install, only one container is defined and it is called the '''default container'''. Also, there are 4 different methods to tell tabSRMM how it should assign chat sessions to a container. These modes can be chosen under %25class=option%25Message Sessions->Containers[tab]%25%25.%0a> %0a97c96%0a%3c See the section above [[#assigning|about assigning containers in manual mode]]%0a---%0a> However, you can change the assignment for any contact %0a
host:1289048336=81.217.70.206
author:1289048073=admin
diff:1289048073:1289047412:=63,64c63,64%0a%3c There are a few methods to configure the way, new message windows are opened when a message is received from some contact. By default, TabSRMM will not automatically open any message windows. The event will flash in the system tray until you click the tray icon or manually open the message window for the contact from whom you received the message. Additionally, you may see a [[EventNotifications|notification popup]].%0a%3c %0a---%0a> There are a few methods to configure the way, new message windows are opened when a message is received from some contact. By default, tabSRMM will not automatically open the message window. The message event will flash in the system tray until you click the tray icon or manually open the message window for the contact from whom you received the message.%0a> %0a67,69c67,69%0a%3c # '''ALWAYS popup and activate new message windows''' - when this option is active, TabSRMM will automatically open and activate the message window for any incoming message. This option will 'steal' the focus of the current active desktop window and should therefore be considered the most aggressive option. Also, this option '''has priority''' over the others, so it will always override any other window creation mode. Disable it, if you want to have message windows opened in the background or in minimized state.%0a%3c # '''Automatically create new message sessions windows without activating them''' - when active, new tabs will be created (but not focused) automatically, '''but only when the parent container to which the tab should be added is already open'''. This option will only allow automatic creation of new tabs in already existing containers.%0a%3c # '''New windows are minimized''' - when active, new message windows are created minimized on the task bar (discreet mode, the message window will never steal the focus). '''Option 2) %25red%25MUST%25%25 also be enabled to make this work'''. Basically, if you disable 3) while 2) is enabled, no new windows will be created automatically, but new tabs will be automatically added to existing windows.%0a---%0a> # '''ALWAYS popup and activate new message windows''' - when this option is active, tabSRMM will automatically open and activate the message window for any incoming message. This option will 'steal' the focus of the current active desktop window and should therefore be considered the most aggressive option. Also, this option '''has priority''' over the others, so it will always override any other window creation mode.%0a> # '''Automatically create new message sessions windows without activating them''' - when active, new tabs will be created (but not focused) automatically, '''but only when the parent container to which the tab should be added is already open'''. This option will only create allow automatic creation of new tabs in already existing containers.%0a> # '''New windows are minimized''' - when active, new message windows are created minimized on the task bar (discreet mode, the message window will never steal the focus). '''Option 2) must also be enabled to make this work'''. Basically, if you disable 3) while 2) is enabled, no new windows will be created automatically, but new tabs will be automatically added to existing windows.%0a
host:1289048073=81.217.70.206
author:1289047412=admin
diff:1289047412:1289046498:=28,29d27%0a%3c (:include Template/Formatting#note#endnote Text="The container management UI can only be used when using the manual assignment mode. In any other mode, container management is automatic and the menu entries for assigning or managing containers are unavailable.":)%0a%3c %0a33,59d30%0a%3c (:include Template/Formatting#rimage#endrimage Image="containerui.png" Width="200" rel=highslide Caption="Managing containers":)%0a%3c %0a%3c The screenshot on the right shows how the container management dialog looks like. It shows a list of containers and a number of buttons to create, rename or delete containers.%0a%3c %0a%3c ==== To assign the current contact to a container====%0a%3c %0a%3c Select the target container in the list and click **Ok**. The current contact's message window will close and re-open in the new container. If the current message tab was the last tab in the open container, it will close, otherwise it will stay open.%0a%3c %0a%3c ==== To create a new named container ====%0a%3c %0a%3c Enter the name in the text field at the bottom and click **Create new**.%0a%3c %0a%3c ==== To delete a container ====%0a%3c %0a%3c Select it from the list and click **Delete**%0a%3c %0a%3c ====What happens with assigned contacts when their container is deleted?====%0a%3c %0a%3c The next time, they will open in the default container. Nothing is lost.%0a%3c %0a%3c ====Why is it not possible to rearrange message tabs using Drag and Drop?====%0a%3c %0a%3c Because it's not so easy to implement. Also, I do not consider it a major improvement in usability. Using drag and drop would require you to open the target container before you can drag the tab. If the target container is new, you cannot open it, because a container cannot exist without at least one message tab.%0a%3c %0a%3c ==== Quick assignment ====%0a%3c %0a%3c When you know that the target container does already exist and just want to move a contact quickly, you can use the %25class=menu%25Attach to >%25%25 menu entry from the popup menu. It will hold a list of available containers to choose from. By using this method, you can skip invoking the container management dialog.%0a
host:1289047412=81.217.70.206
author:1289046498=admin
diff:1289046498:1288432144:=7,9c7,9%0a%3c In TabSRMM terminology, message windows are often called '''containers'''. So whenever you see this term, it basically means a top level message window. It is called a container, because it acts as a top level parent window for the actual session windows. The container implements a tabbed user interface and can hold any number of children and each child can be either a standard IM window (for 1:1 instant messaging chats) or a [[Group_chats|group chat]] window.\\\%0a%3c %0a%3c TabSRMM also supports multiple containers. You can have as many as you want and there are 3 different modes for assigning a chat session to a particular container. A special case is the '''single window mode''' which disables the tabbed user interface. When active, each chat session will get its own top level window and any container window will hold exactly one child.%0a---%0a> In tabSRMM terminology, message windows are often called '''containers'''. So whenever you see this term, it basically means a top level message window. It is called a container, because it acts as the top level parent window for the actual message session windows. The container implements a tabbed user interface and can hold any number of children and each child can be either a standard IM window (for 1:1 instant messaging chats) or a [[Group_chats|group chat]] window.\\\%0a> %0a> TabSRMM also supports multiple containers. You can have as many as you want and there are 3 different ways for assigning a chat session to a particular container. A special case is the '''single window mode''' which disables the tabbed user interface. When active, each chat session will get its own top level window and any container window will hold exactly one child.%0a14,15c14,15%0a%3c Many options in TabSRMM are implemented on a '''per container''' basis, which means that different container windows can act or look different from each other. This is useful when you want to group and organize your chat sessions in one or another way. It is, however, completely optional and by default, all containers share a common set of settings to simplify configuration.%0a%3c %0a---%0a> Many options in tabSRMM are implemented on a '''per container''' basis, which means that different container windows can act or look different from each other. This is useful when you want to group and organize your chat sessions in one or another way.%0a> %0a21c21%0a%3c * '''Container names correspond to contact list group names'''. This happens when you use the option to organize chat sessions with the help of your contact list groups. Whenever you open a chat window, it will open inside a container that inherits its name from the contact list group. If a contact is not in any contact list group, it will open in the **Default** container.\\Note that the contact list's setting of showing groups is not considered here. A contact will still be in its group despite the contact list using a 'flat' layout with no groups.%0a---%0a> * '''Container names correspond to contact list group names'''. This happens when you use the option to organize chat sessions with the help of your contact list groups. Whenever you open a chat window, it will open inside a container that inherits its name from the contact list group.%0a23,30d22%0a%3c %0a%3c == Assigning and managing containers ==%0a%3c %0a%3c To create or delete containers, you must have a message window open. The container UI can be reached from the following locations:%0a%3c %0a%3c * right click the message window's tool bar and choose %25class=menu%25Attach to container...%25%25%0a%3c * right click any tab to get the same popup menu.\\\%0a%3c %0a
host:1289046498=81.217.70.206
author:1288432144=admin
diff:1288432144:1288428395:=4d3%0a%3c [[#teaser]]%0a10d8%0a%3c [[#teaserend]]%0a
host:1288432144=81.217.70.206
author:1288428395=admin
diff:1288428395:1287954553:=1d0%0a%3c (:title Containers in TabSRMM:)%0a31c30%0a%3c # '''Pop up a minimized window when a new tab is created''' - if enabled, a minimized message window will be restored to the desktop when a new tab is added to it. Also, when a new container is created on demand, it will put itself to foreground. This option is should be considered %25Red%25aggressive%25%25, because it will steal the input focus.\\\%0a---%0a> # '''Pop up a minimized window when a new tab is created''' - if enabled, a minimized message window will be restored to the desktop when a new tab is added to it. Also, when a new container is created on demand, it will put itself to foreground. This option is should be considered {{Red|aggressive}}, because it will steal the input focus.\\\%0a
host:1288428395=81.217.70.206
author:1287954553=admin
diff:1287954553:1287719570:=61a62,65%0a> %0a> (:include Template/Footer:)%0a> %0a> Category: [[TabSRMM]]%0a
host:1287954553=81.217.70.206
author:1287719570=admin
diff:1287719570:1287709739:=
host:1287719570=81.217.70.206
author:1287709739=admin
diff:1287709739:1287709727:=3c3%0a%3c ->'''Quick link if you only want to learn about the configuration options, go [[ConfigureContainers|here]]'''.\\\%0a---%0a> '''Quick link if you only want to learn about the configuration options, go [[ConfigureContainers|here]]'''.%0a
host:1287709739=81.217.70.206
author:1287709727=admin
diff:1287709727:1287694179:=3,4d2%0a%3c '''Quick link if you only want to learn about the configuration options, go [[ConfigureContainers|here]]'''.%0a%3c %0a
host:1287709727=81.217.70.206
author:1287694179=admin
diff:1287694179:1287694134:=1d0%0a%3c %3c|[[TabSRMM#reference#endreference|Page Index]]|>%0a3c2%0a%3c In tabSRMM terminology, message windows are often called '''containers'''. So whenever you see this term, it basically means a top level message window. It is called a container, because it acts as the top level parent window for the actual message session windows. The container implements a tabbed user interface and can hold any number of children and each child can be either a standard IM window (for 1:1 instant messaging chats) or a [[Group_chats|group chat]] window.\\\%0a---%0a> In tabSRMM terminology, message windows are often called '''containers'''. So whenever you see this term, it basically means a top level message window. It is called a container, because it acts as the top level parent window for the actual message session windows. The container implements a tabbed user interface and can hold any number of children and each child can be either a standard IM window (for 1:1 instant messaging chats) or a [[Group_chats|group chat]] window. %0a
host:1287694179=81.217.70.206
author:1287694134=admin
diff:1287694134:1287694134:=1,62d0%0a%3c =Containers=%0a%3c In tabSRMM terminology, message windows are often called '''containers'''. So whenever you see this term, it basically means a top level message window. It is called a container, because it acts as the top level parent window for the actual message session windows. The container implements a tabbed user interface and can hold any number of children and each child can be either a standard IM window (for 1:1 instant messaging chats) or a [[Group_chats|group chat]] window. %0a%3c %0a%3c TabSRMM also supports multiple containers. You can have as many as you want and there are 3 different ways for assigning a chat session to a particular container. A special case is the '''single window mode''' which disables the tabbed user interface. When active, each chat session will get its own top level window and any container window will hold exactly one child.%0a%3c %0a%3c ==Configuration==%0a%3c %0a%3c Many options in tabSRMM are implemented on a '''per container''' basis, which means that different container windows can act or look different from each other. This is useful when you want to group and organize your chat sessions in one or another way.%0a%3c %0a%3c == Identifying containers==%0a%3c %0a%3c Any container is identified by its name, which must be unique. How container names are assigned depends on the way container windows are used in the plugin:%0a%3c %0a%3c * The default container. It always exists and its name is always "Default". You cannot rename or delete the default container. Any non-assigned chat session will be opened in the default container%0a%3c * '''Container names correspond to contact list group names'''. This happens when you use the option to organize chat sessions with the help of your contact list groups. Whenever you open a chat window, it will open inside a container that inherits its name from the contact list group.%0a%3c * '''Manually assigned names''' - this is the standard way. You are responsible for creating new (named) containers and assigning contacts to them. In this mode, all new chat sessions will open in the default container until you assign them to another one (which is completely optional, by the way).\\\%0a%3c %0a%3c ==Auto opening message windows==%0a%3c %0a%3c There are a few methods to configure the way, new message windows are opened when a message is received from some contact. By default, tabSRMM will not automatically open the message window. The message event will flash in the system tray until you click the tray icon or manually open the message window for the contact from whom you received the message.%0a%3c %0a%3c Some people find it more convent to have message windows created automatically when new messages arrive. You can configure this behaviour under %25class=option%25Message Sessions->Tabs and layout[tab]%25%25 with the following settings, all of them in the section "Message tab and window creation options.:%0a%3c %0a%3c # '''ALWAYS popup and activate new message windows''' - when this option is active, tabSRMM will automatically open and activate the message window for any incoming message. This option will 'steal' the focus of the current active desktop window and should therefore be considered the most aggressive option. Also, this option '''has priority''' over the others, so it will always override any other window creation mode.%0a%3c # '''Automatically create new message sessions windows without activating them''' - when active, new tabs will be created (but not focused) automatically, '''but only when the parent container to which the tab should be added is already open'''. This option will only create allow automatic creation of new tabs in already existing containers.%0a%3c # '''New windows are minimized''' - when active, new message windows are created minimized on the task bar (discreet mode, the message window will never steal the focus). '''Option 2) must also be enabled to make this work'''. Basically, if you disable 3) while 2) is enabled, no new windows will be created automatically, but new tabs will be automatically added to existing windows.%0a%3c # '''Pop up a minimized window when a new tab is created''' - if enabled, a minimized message window will be restored to the desktop when a new tab is added to it. Also, when a new container is created on demand, it will put itself to foreground. This option is should be considered {{Red|aggressive}}, because it will steal the input focus.\\\%0a%3c %0a%3c ==How to assign contacts to a container?==%0a%3c %0a%3c As mentioned, you can have multiple containers which may or may not be wanted and can help you with organizing your chat sessions. In a fresh install, only one container is defined and it is called the '''default container'''. Also, there are 4 different methods to tell tabSRMM how it should assign chat sessions to a container. These modes can be chosen under %25class=option%25Message Sessions->Containers[tab]%25%25.%0a%3c %0a%3c ===Use contact list group names for organizing container names===%0a%3c %0a%3c This option will tell tabSRMM to automatically create one container for each contact list group and add chat sessions as tabs. Let's assume you have a contact list group with the name '''Friends''' which holds a few of your more important contacts. Whenever you open a message window for one of the contacts in this group, tabSRMM will open the container with the name "Friends" and add the chat tab to it. If the container is already open, the chat window will be added as a new tab. This mode is fully automatic.%0a%3c %0a%3c (:include Template/Formatting#note#endnote Text="When you move a contact from one contact list group to another one, the message tab will not move to the new container immediately. This will be done the next time you open a chat session for this contact.":)\\\%0a%3c %0a%3c ===Maximum number of tabs per container===%0a%3c %0a%3c This mode, which is also fully automatic, will just limit the number of sessions per container window to the given number. Whenever a new session is created, it is added to the current container, unless this container already has reached the session limit, in which case, a new container will be created.%0a%3c %0a%3c ===Use single window mode (one tab per container)===%0a%3c %0a%3c This mode will effectively disable the tabbed user interface. When active, each message session will be opened in its own top level window.%0a%3c %0a%3c Also, in this mode, container settings are global for all message windows. Only the size and position of the window will be saved individually for each contact or chat room.%0a%3c %0a%3c ===Default container mode (manual assignment)===%0a%3c %0a%3c This is probably the most flexible method of using multiple containers. In this mode, you have full control over how many different containers you want to use and in which container a given contact should be placed when you open a message session. In a fresh install, only one named container is available. This is called the '''default''' container and it is used for any new message session, unless the contact had been assigned to a different container.%0a%3c %0a%3c However, you can change the assignment for any contact %0a%3c %0a%3c ==Related reading==%0a%3c %0a%3c * [[Sessions|session managment]]%0a%3c * [[ConfigureContainers|how to configure the look and feel of a container window]]%0a%3c %0a%3c (:include Template/Footer:)%0a%3c %0a%3c Category: [[TabSRMM]]%0a
host:1287694134=81.217.70.206
